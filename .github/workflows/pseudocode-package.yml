# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Checkout and test pseudo-9608

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    # Checkout repository
    - name: Check out repository
      uses: actions/checkout@v3
    # Set up Python 3.x
    - name: Set up Python ${{ matrix.python-version }}
      id: setup-python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    # Load cached poetry installation
    - name: Load cached Poetry installation
      uses: actions/cache@v2
      with:
        path: ~/.local  # the path depends on the OS
        key: poetry-0  # increment to reset cache
    # Install poetry package manager
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    # Load cached venv for dependencies if it exists
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    # Install dependencies with poetry if cache does not exist
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    # Run tests with unittest
    - name: Run unittests
      run: |
        source .venv/bin/activate
        python -m unittest
    # Run static checking with mypy
    - name: Run mypy
      uses: jpetrucciani/mypy-check@master
      with:
        path: 'pseudocode'
